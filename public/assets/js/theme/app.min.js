// src/assets/js/app.min.js
(function (w, d) {
  function chainHandler(obj, prop, handler) {
    var prev = obj[prop];
    if (typeof prev === 'function') {
      obj[prop] = function (e) { try { prev.call(this, e); } catch(_) {} handler.call(this, e); };
    } else {
      obj[prop] = handler;
    }
  }

  function AppMin() {
    var settings = Object.assign({}, w.userSettings || {});
    var isSidebar = d.getElementsByClassName("customizer");
    if (!isSidebar || !isSidebar.length) return;

    var AdminSettings = {
      AdminSettingsInit: function () {
        this.ManageThemeLayout();
        this.ManageSidebarType();
        this.ManageBoxedLayout();
        this.ManageDirectionLayout();
        this.ManageDarkThemeLayout();
        this.ManageColorThemeLayout();
        this.ManageCardLayout();
      },

      ManageThemeLayout: function () {
        switch (settings.Layout) {
          case "horizontal":
            var h = d.getElementById("horizontal-layout"); if (h) h.checked = true;
            d.documentElement.setAttribute("data-layout", "horizontal");
            break;
          case "vertical":
            var v = d.getElementById("vertical-layout"); if (v) v.checked = true;
            d.documentElement.setAttribute("data-layout", "vertical");
            break;
          default: break;
        }
      },

      ManageSidebarType: function () {
        switch (settings.SidebarType) {
          case "full": {
            var full = d.querySelector("#full-sidebar"); if (full) full.checked = true;
            d.body.setAttribute("data-sidebartype", "full");

            var setsidebartype = function () {
              var width = w.innerWidth > 0 ? w.innerWidth : (w.screen ? w.screen.width : 1920);
              d.body.setAttribute("data-sidebartype", width < 1300 ? "mini-sidebar" : "full");
            };
            try { setsidebartype(); } catch (_) {}
            chainHandler(w, 'onresize', setsidebartype);
            break;
          }
          case "mini-sidebar": {
            var mini = d.querySelector("#mini-sidebar"); if (mini) mini.checked = true;
            d.body.setAttribute("data-sidebartype", "mini-sidebar");
            break;
          }
          default: break;
        }
      },

      ManageBoxedLayout: function () {
        var boxed = d.getElementById("boxed-layout");
        if (boxed) boxed.checked = true;

        switch (settings.BoxedLayout) {
          case true:
            d.documentElement.setAttribute("data-boxed-layout", "boxed");
            if (boxed) boxed.checked = true;
            break;
          case false:
            d.documentElement.setAttribute("data-boxed-layout", "full");
            var full = d.getElementById("full-layout"); if (full) full.checked = true;
            break;
          default: break;
        }
      },

      ManageDirectionLayout: function () {
        switch (settings.Direction) {
          case "ltr": {
            var ltr = d.getElementById("ltr-layout"); if (ltr) ltr.checked = true;
            d.documentElement.setAttribute("dir", "ltr");
            var offStart = d.querySelector(".offcanvas-start");
            if (offStart) { offStart.classList.toggle("offcanvas-end"); offStart.classList.remove("offcanvas-start"); }
            break;
          }
          case "rtl": {
            d.documentElement.setAttribute("dir", "rtl");
            var offEnd = d.querySelector(".offcanvas-end");
            if (offEnd) { offEnd.classList.toggle("offcanvas-start"); offEnd.classList.remove("offcanvas-end"); }
            var rtl = d.getElementById("rtl-layout"); if (rtl) rtl.checked = true;
            break;
          }
          default: break;
        }
      },

      ManageCardLayout: function () {
        var noBorder = d.getElementById("card-without-border"); if (noBorder) noBorder.checked = true;
        switch (settings.cardBorder) {
          case true:
            d.documentElement.setAttribute("data-card", "border");
            var withBorder = d.getElementById("card-with-border"); if (withBorder) withBorder.checked = true;
            break;
          case false:
            d.documentElement.setAttribute("data-card", "shadow");
            if (noBorder) noBorder.checked = true;
            break;
          default: break;
        }
      },

      ManageDarkThemeLayout: function () {
        switch (settings.Theme) {
          case "light":
            d.documentElement.classList.remove('dark');
            setTheme(["light-logo"], ["moon"], ["sun"]);
            break;
          case "dark":
            d.documentElement.classList.add('dark');
            setTheme(["dark-logo"], ["sun"], ["moon"]);
            break;
          default: break;
        }

        function setTheme(hideA, showB, hideC) {
          hideA.forEach(function (cls) { d.querySelectorAll("." + cls).forEach(function (e) { e.style.display = "none"; }); });
          showB.forEach(function (cls) { d.querySelectorAll("." + cls).forEach(function (e) { e.style.display = "flex"; }); });
          hideC.forEach(function (cls) { d.querySelectorAll("." + cls).forEach(function (e) { e.style.display = "none"; }); });
        }
      },

      ManageColorThemeLayout: function () {
        var ColorTheme = settings.ColorTheme;
        var el = ColorTheme ? d.getElementById(ColorTheme) : null;
        if (el) {
          d.documentElement.setAttribute("data-color-theme", ColorTheme);
          el.checked = true;
        }
      }
    };

    AdminSettings.AdminSettingsInit();

    // -------- Handlers DIRECTOS de la UI (sin addEventListener) ----------
    var rtl = d.getElementById("rtl-layout");
    if (rtl) rtl.onclick = function () {
      d.documentElement.setAttribute("dir", "rtl");
      var oc = d.querySelector(".customizer.offcanvas-end");
      if (oc) { oc.classList.toggle("offcanvas-start"); oc.classList.remove("offcanvas-end"); }
    };

    var ltr = d.getElementById("ltr-layout");
    if (ltr) ltr.onclick = function () {
      d.documentElement.setAttribute("dir", "ltr");
      var oc = d.querySelector(".customizer.offcanvas-start");
      if (oc) { oc.classList.toggle("offcanvas-end"); oc.classList.remove("offcanvas-start"); }
    };

    var boxedLayout = d.getElementById("boxed-layout");
    var fullLayout  = d.getElementById("full-layout");
    var containers  = d.querySelectorAll(".container");

    if (boxedLayout) boxedLayout.onclick = function () {
      containers.forEach(function (el) { el.classList.remove("max-w-full"); });
      d.documentElement.setAttribute("data-boxed-layout", "boxed");
      boxedLayout.checked = true;
    };

    if (fullLayout) fullLayout.onclick = function () {
      containers.forEach(function (el) { el.classList.add("max-w-full"); });
      d.documentElement.setAttribute("data-boxed-layout", "full");
      fullLayout.checked = true;
    };

    var v = d.getElementById("vertical-layout");
    if (v) v.onclick = function () {
      d.documentElement.setAttribute("data-layout", "vertical");
      v.checked = true;
    };

    var h = d.getElementById("horizontal-layout");
    if (h) h.onclick = function () {
      d.documentElement.setAttribute("data-layout", "horizontal");
      h.checked = true;
    };

    function setThemeAttributes(theme, hideA, showB, hideC) {
      d.documentElement.setAttribute("data-bs-theme", theme);
      var radio = d.getElementById(theme + "-layout"); if (radio) radio.checked = true;
      d.querySelectorAll("." + hideA).forEach(function (el) { el.style.display = "none"; });
      d.querySelectorAll("." + showB).forEach(function (el) { el.style.display = "flex"; });
      d.querySelectorAll("." + hideC).forEach(function (el) { el.style.display = "none"; });
    }

    d.querySelectorAll(".dark-layout").forEach(function (el) {
      el.onclick = function () { setThemeAttributes("dark", "dark-logo", "light-logo", "moon", "sun"); };
    });
    d.querySelectorAll(".light-layout").forEach(function (el) {
      el.onclick = function () { setThemeAttributes("light", "light-logo", "dark-logo", "sun", "moon"); };
    });

    var cardWithBorder = d.getElementById("card-with-border");
    if (cardWithBorder) cardWithBorder.onclick = function () {
      d.documentElement.setAttribute("data-card", "border");
    };
    var cardWithoutBorder = d.getElementById("card-without-border");
    if (cardWithoutBorder) cardWithoutBorder.onclick = function () {
      d.documentElement.setAttribute("data-card", "shadow");
    };

    var fullSidebar = d.getElementById("full-sidebar");
    if (fullSidebar) fullSidebar.onclick = function () {
      d.body.setAttribute("data-sidebartype", "full");
    };
    var miniSidebar = d.getElementById("mini-sidebar");
    if (miniSidebar) miniSidebar.onclick = function () {
      d.body.setAttribute("data-sidebartype", "mini-sidebar");
    };

    var togglers = d.querySelectorAll(".sidebartoggler");
    if (togglers && togglers.length) {
      togglers.forEach(function (el) {
        el.onclick = function () {
          d.querySelectorAll(".sidebartoggler").forEach(function (t) { if ('checked' in t) t.checked = true; });
          var wrap = d.getElementById("main-wrapper"); if (wrap) wrap.classList.toggle("show-sidebar");
          d.querySelectorAll(".sidebarmenu").forEach(function (m) { m.classList.toggle("close"); });
          var current = d.body.getAttribute("data-sidebartype");
          d.body.setAttribute("data-sidebartype", current === "full" ? "mini-sidebar" : "full");
        };
      });
    }
  }

  // Exporta global
  w.AppMin = AppMin;
})(window, document);
